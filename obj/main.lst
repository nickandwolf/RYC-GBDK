                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _Move_MainCharacter
                                     13 	.globl _CheckCollision
                                     14 	.globl _InitLevel1_1
                                     15 	.globl _Level1_1_Act
                                     16 	.globl _PlacePlayer
                                     17 	.globl _MainCharacter_walk
                                     18 	.globl _MainCharacter_idle
                                     19 	.globl _dialog_print
                                     20 	.globl _init_bkg
                                     21 	.globl _init_win
                                     22 	.globl _set_sprite_data
                                     23 	.globl _set_win_tiles
                                     24 	.globl _set_win_data
                                     25 	.globl _set_bkg_tiles
                                     26 	.globl _set_bkg_data
                                     27 	.globl _vsync
                                     28 	.globl _joypad
                                     29 	.globl _keys
                                     30 	.globl _previous_keys
                                     31 	.globl _map
                                     32 	.globl _action_func
                                     33 ;--------------------------------------------------------
                                     34 ; special function registers
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _DATA
      000000                         40 _action_func::
      000000                         41 	.ds 2
      000002                         42 _map::
      000002                         43 	.ds 360
                                     44 ;--------------------------------------------------------
                                     45 ; ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _INITIALIZED
      000000                         48 _previous_keys::
      000000                         49 	.ds 1
      000001                         50 _keys::
      000001                         51 	.ds 1
                                     52 ;--------------------------------------------------------
                                     53 ; absolute external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area _DABS (ABS)
                                     56 ;--------------------------------------------------------
                                     57 ; global & static initialisations
                                     58 ;--------------------------------------------------------
                                     59 	.area _HOME
                                     60 	.area _GSINIT
                                     61 	.area _GSFINAL
                                     62 	.area _GSINIT
                                     63 ;--------------------------------------------------------
                                     64 ; Home
                                     65 ;--------------------------------------------------------
                                     66 	.area _HOME
                                     67 	.area _HOME
                                     68 ;--------------------------------------------------------
                                     69 ; code
                                     70 ;--------------------------------------------------------
                                     71 	.area _CODE
                                     72 ;src/main.c:28: void PlacePlayer() {//stays here because of TILES
                                     73 ;	---------------------------------
                                     74 ; Function PlacePlayer
                                     75 ; ---------------------------------
      000000                         76 _PlacePlayer::
                                     77 ;src/main.c:29: playerX = playerMapX * TILES;
      000000 FAr00r00         [16]   78 	ld	a, (#_playerMapX)
      000003 87               [ 4]   79 	add	a, a
      000004 87               [ 4]   80 	add	a, a
      000005 87               [ 4]   81 	add	a, a
      000006 EAr00r00         [16]   82 	ld	(#_playerX),a
                                     83 ;src/main.c:30: playerY = playerMapY * TILES;
      000009 FAr00r00         [16]   84 	ld	a, (#_playerMapY)
      00000C 87               [ 4]   85 	add	a, a
      00000D 87               [ 4]   86 	add	a, a
      00000E 87               [ 4]   87 	add	a, a
      00000F EAr00r00         [16]   88 	ld	(#_playerY),a
                                     89 ;src/main.c:31: }
      000012 C9               [16]   90 	ret
                                     91 ;src/main.c:33: void Level1_1_Act(void) {
                                     92 ;	---------------------------------
                                     93 ; Function Level1_1_Act
                                     94 ; ---------------------------------
      000013                         95 _Level1_1_Act::
      000013 E8 80            [16]   96 	add	sp, #-128
      000015 E8 E3            [16]   97 	add	sp, #-29
                                     98 ;src/main.c:34: int check = CheckCollision();
      000017 CDr57r03         [24]   99 	call	_CheckCollision
                                    100 ;src/main.c:36: switch(check) {
      00001A 79               [ 4]  101 	ld	a, c
      00001B B7               [ 4]  102 	or	a, a
      00001C B0               [ 4]  103 	or	a, b
      00001D CAr66r02         [16]  104 	jp	Z,00110$
      000020 79               [ 4]  105 	ld	a, c
      000021 3D               [ 4]  106 	dec	a
      000022 B0               [ 4]  107 	or	a, b
      000023 CAr66r02         [16]  108 	jp	Z,00110$
      000026 79               [ 4]  109 	ld	a, c
      000027 D6 02            [ 8]  110 	sub	a, #0x02
      000029 B0               [ 4]  111 	or	a, b
      00002A 28 18            [12]  112 	jr	Z, 00103$
      00002C 79               [ 4]  113 	ld	a, c
      00002D D6 03            [ 8]  114 	sub	a, #0x03
      00002F B0               [ 4]  115 	or	a, b
      000030 CArB4r00         [16]  116 	jp	Z,00104$
      000033 79               [ 4]  117 	ld	a, c
      000034 D6 04            [ 8]  118 	sub	a, #0x04
      000036 B0               [ 4]  119 	or	a, b
      000037 CAr84r01         [16]  120 	jp	Z,00105$
      00003A 79               [ 4]  121 	ld	a, c
      00003B D6 0A            [ 8]  122 	sub	a, #0x0a
      00003D B0               [ 4]  123 	or	a, b
      00003E CArEDr01         [16]  124 	jp	Z,00106$
      000041 C3r66r02         [16]  125 	jp	00110$
                                    126 ;src/main.c:44: case 2://CHUTE
      000044                        127 00103$:
                                    128 ;src/main.c:45: char text2[] = "looks like some   sort of chute#*";
      000044 F8 00            [12]  129 	ldhl	sp,	#0
      000046 4D               [ 4]  130 	ld	c, l
      000047 44               [ 4]  131 	ld	b, h
      000048 36 6C            [12]  132 	ld	(hl), #0x6c
      00004A F8 01            [12]  133 	ldhl	sp,	#1
      00004C 3E 6F            [ 8]  134 	ld	a,#0x6f
      00004E 22               [ 8]  135 	ld	(hl+),a
      00004F 22               [ 8]  136 	ld	(hl+), a
      000050 3E 6B            [ 8]  137 	ld	a, #0x6b
      000052 22               [ 8]  138 	ld	(hl+), a
      000053 3E 73            [ 8]  139 	ld	a, #0x73
      000055 22               [ 8]  140 	ld	(hl+), a
      000056 3E 20            [ 8]  141 	ld	a, #0x20
      000058 22               [ 8]  142 	ld	(hl+), a
      000059 3E 6C            [ 8]  143 	ld	a, #0x6c
      00005B 22               [ 8]  144 	ld	(hl+), a
      00005C 3E 69            [ 8]  145 	ld	a, #0x69
      00005E 22               [ 8]  146 	ld	(hl+), a
      00005F 3E 6B            [ 8]  147 	ld	a, #0x6b
      000061 22               [ 8]  148 	ld	(hl+), a
      000062 3E 65            [ 8]  149 	ld	a, #0x65
      000064 22               [ 8]  150 	ld	(hl+), a
      000065 3E 20            [ 8]  151 	ld	a, #0x20
      000067 22               [ 8]  152 	ld	(hl+), a
      000068 3E 73            [ 8]  153 	ld	a, #0x73
      00006A 22               [ 8]  154 	ld	(hl+), a
      00006B 3E 6F            [ 8]  155 	ld	a, #0x6f
      00006D 22               [ 8]  156 	ld	(hl+), a
      00006E 3E 6D            [ 8]  157 	ld	a, #0x6d
      000070 22               [ 8]  158 	ld	(hl+), a
      000071 3E 65            [ 8]  159 	ld	a, #0x65
      000073 22               [ 8]  160 	ld	(hl+), a
      000074 3E 20            [ 8]  161 	ld	a,#0x20
      000076 22               [ 8]  162 	ld	(hl+),a
      000077 22               [ 8]  163 	ld	(hl+), a
      000078 3E 20            [ 8]  164 	ld	a, #0x20
      00007A 22               [ 8]  165 	ld	(hl+), a
      00007B 3E 73            [ 8]  166 	ld	a, #0x73
      00007D 22               [ 8]  167 	ld	(hl+), a
      00007E 3E 6F            [ 8]  168 	ld	a, #0x6f
      000080 22               [ 8]  169 	ld	(hl+), a
      000081 3E 72            [ 8]  170 	ld	a, #0x72
      000083 22               [ 8]  171 	ld	(hl+), a
      000084 3E 74            [ 8]  172 	ld	a, #0x74
      000086 22               [ 8]  173 	ld	(hl+), a
      000087 3E 20            [ 8]  174 	ld	a, #0x20
      000089 22               [ 8]  175 	ld	(hl+), a
      00008A 3E 6F            [ 8]  176 	ld	a, #0x6f
      00008C 22               [ 8]  177 	ld	(hl+), a
      00008D 3E 66            [ 8]  178 	ld	a, #0x66
      00008F 22               [ 8]  179 	ld	(hl+), a
      000090 3E 20            [ 8]  180 	ld	a, #0x20
      000092 22               [ 8]  181 	ld	(hl+), a
      000093 3E 63            [ 8]  182 	ld	a, #0x63
      000095 22               [ 8]  183 	ld	(hl+), a
      000096 3E 68            [ 8]  184 	ld	a, #0x68
      000098 22               [ 8]  185 	ld	(hl+), a
      000099 3E 75            [ 8]  186 	ld	a, #0x75
      00009B 22               [ 8]  187 	ld	(hl+), a
      00009C 3E 74            [ 8]  188 	ld	a, #0x74
      00009E 22               [ 8]  189 	ld	(hl+), a
      00009F 3E 65            [ 8]  190 	ld	a, #0x65
      0000A1 22               [ 8]  191 	ld	(hl+), a
      0000A2 3E 23            [ 8]  192 	ld	a, #0x23
      0000A4 22               [ 8]  193 	ld	(hl+), a
      0000A5 3E 2A            [ 8]  194 	ld	a, #0x2a
      0000A7 22               [ 8]  195 	ld	(hl+), a
      0000A8 36 00            [12]  196 	ld	(hl), #0x00
                                    197 ;src/main.c:46: dialog_print(text2, sizeof(text2));
      0000AA 3E 22            [ 8]  198 	ld	a, #0x22
      0000AC 59               [ 4]  199 	ld	e, c
      0000AD 50               [ 4]  200 	ld	d, b
      0000AE CDr00r00         [24]  201 	call	_dialog_print
                                    202 ;src/main.c:47: break;
      0000B1 C3r66r02         [16]  203 	jp	00110$
                                    204 ;src/main.c:49: case 3://PILE
      0000B4                        205 00104$:
                                    206 ;src/main.c:50: char text3[] = "twisted limbs,    bones, and skulls  peer out from     rotten flesh#*";
      0000B4 F8 22            [12]  207 	ldhl	sp,	#34
      0000B6 4D               [ 4]  208 	ld	c, l
      0000B7 44               [ 4]  209 	ld	b, h
      0000B8 36 74            [12]  210 	ld	(hl), #0x74
      0000BA F8 23            [12]  211 	ldhl	sp,	#35
      0000BC 3E 77            [ 8]  212 	ld	a, #0x77
      0000BE 22               [ 8]  213 	ld	(hl+), a
      0000BF 3E 69            [ 8]  214 	ld	a, #0x69
      0000C1 22               [ 8]  215 	ld	(hl+), a
      0000C2 3E 73            [ 8]  216 	ld	a, #0x73
      0000C4 22               [ 8]  217 	ld	(hl+), a
      0000C5 3E 74            [ 8]  218 	ld	a, #0x74
      0000C7 22               [ 8]  219 	ld	(hl+), a
      0000C8 3E 65            [ 8]  220 	ld	a, #0x65
      0000CA 22               [ 8]  221 	ld	(hl+), a
      0000CB 3E 64            [ 8]  222 	ld	a, #0x64
      0000CD 22               [ 8]  223 	ld	(hl+), a
      0000CE 3E 20            [ 8]  224 	ld	a, #0x20
      0000D0 22               [ 8]  225 	ld	(hl+), a
      0000D1 3E 6C            [ 8]  226 	ld	a, #0x6c
      0000D3 22               [ 8]  227 	ld	(hl+), a
      0000D4 3E 69            [ 8]  228 	ld	a, #0x69
      0000D6 22               [ 8]  229 	ld	(hl+), a
      0000D7 3E 6D            [ 8]  230 	ld	a, #0x6d
      0000D9 22               [ 8]  231 	ld	(hl+), a
      0000DA 3E 62            [ 8]  232 	ld	a, #0x62
      0000DC 22               [ 8]  233 	ld	(hl+), a
      0000DD 3E 73            [ 8]  234 	ld	a, #0x73
      0000DF 22               [ 8]  235 	ld	(hl+), a
      0000E0 3E 2C            [ 8]  236 	ld	a, #0x2c
      0000E2 22               [ 8]  237 	ld	(hl+), a
      0000E3 3E 20            [ 8]  238 	ld	a,#0x20
      0000E5 22               [ 8]  239 	ld	(hl+),a
      0000E6 22               [ 8]  240 	ld	(hl+), a
      0000E7 3E 20            [ 8]  241 	ld	a,#0x20
      0000E9 22               [ 8]  242 	ld	(hl+),a
      0000EA 22               [ 8]  243 	ld	(hl+), a
      0000EB 3E 62            [ 8]  244 	ld	a, #0x62
      0000ED 22               [ 8]  245 	ld	(hl+), a
      0000EE 3E 6F            [ 8]  246 	ld	a, #0x6f
      0000F0 22               [ 8]  247 	ld	(hl+), a
      0000F1 3E 6E            [ 8]  248 	ld	a, #0x6e
      0000F3 22               [ 8]  249 	ld	(hl+), a
      0000F4 3E 65            [ 8]  250 	ld	a, #0x65
      0000F6 22               [ 8]  251 	ld	(hl+), a
      0000F7 3E 73            [ 8]  252 	ld	a, #0x73
      0000F9 22               [ 8]  253 	ld	(hl+), a
      0000FA 3E 2C            [ 8]  254 	ld	a, #0x2c
      0000FC 22               [ 8]  255 	ld	(hl+), a
      0000FD 3E 20            [ 8]  256 	ld	a, #0x20
      0000FF 22               [ 8]  257 	ld	(hl+), a
      000100 3E 61            [ 8]  258 	ld	a, #0x61
      000102 22               [ 8]  259 	ld	(hl+), a
      000103 3E 6E            [ 8]  260 	ld	a, #0x6e
      000105 22               [ 8]  261 	ld	(hl+), a
      000106 3E 64            [ 8]  262 	ld	a, #0x64
      000108 22               [ 8]  263 	ld	(hl+), a
      000109 3E 20            [ 8]  264 	ld	a, #0x20
      00010B 22               [ 8]  265 	ld	(hl+), a
      00010C 3E 73            [ 8]  266 	ld	a, #0x73
      00010E 22               [ 8]  267 	ld	(hl+), a
      00010F 3E 6B            [ 8]  268 	ld	a, #0x6b
      000111 22               [ 8]  269 	ld	(hl+), a
      000112 3E 75            [ 8]  270 	ld	a, #0x75
      000114 22               [ 8]  271 	ld	(hl+), a
      000115 3E 6C            [ 8]  272 	ld	a,#0x6c
      000117 22               [ 8]  273 	ld	(hl+),a
      000118 22               [ 8]  274 	ld	(hl+), a
      000119 3E 73            [ 8]  275 	ld	a, #0x73
      00011B 22               [ 8]  276 	ld	(hl+), a
      00011C 3E 20            [ 8]  277 	ld	a,#0x20
      00011E 22               [ 8]  278 	ld	(hl+),a
      00011F 22               [ 8]  279 	ld	(hl+), a
      000120 3E 70            [ 8]  280 	ld	a, #0x70
      000122 22               [ 8]  281 	ld	(hl+), a
      000123 3E 65            [ 8]  282 	ld	a,#0x65
      000125 22               [ 8]  283 	ld	(hl+),a
      000126 22               [ 8]  284 	ld	(hl+), a
      000127 3E 72            [ 8]  285 	ld	a, #0x72
      000129 22               [ 8]  286 	ld	(hl+), a
      00012A 3E 20            [ 8]  287 	ld	a, #0x20
      00012C 22               [ 8]  288 	ld	(hl+), a
      00012D 3E 6F            [ 8]  289 	ld	a, #0x6f
      00012F 22               [ 8]  290 	ld	(hl+), a
      000130 3E 75            [ 8]  291 	ld	a, #0x75
      000132 22               [ 8]  292 	ld	(hl+), a
      000133 3E 74            [ 8]  293 	ld	a, #0x74
      000135 22               [ 8]  294 	ld	(hl+), a
      000136 3E 20            [ 8]  295 	ld	a, #0x20
      000138 22               [ 8]  296 	ld	(hl+), a
      000139 3E 66            [ 8]  297 	ld	a, #0x66
      00013B 22               [ 8]  298 	ld	(hl+), a
      00013C 3E 72            [ 8]  299 	ld	a, #0x72
      00013E 22               [ 8]  300 	ld	(hl+), a
      00013F 3E 6F            [ 8]  301 	ld	a, #0x6f
      000141 22               [ 8]  302 	ld	(hl+), a
      000142 3E 6D            [ 8]  303 	ld	a, #0x6d
      000144 22               [ 8]  304 	ld	(hl+), a
      000145 3E 20            [ 8]  305 	ld	a,#0x20
      000147 22               [ 8]  306 	ld	(hl+),a
      000148 22               [ 8]  307 	ld	(hl+), a
      000149 3E 20            [ 8]  308 	ld	a,#0x20
      00014B 22               [ 8]  309 	ld	(hl+),a
      00014C 22               [ 8]  310 	ld	(hl+), a
      00014D 3E 20            [ 8]  311 	ld	a, #0x20
      00014F 22               [ 8]  312 	ld	(hl+), a
      000150 3E 72            [ 8]  313 	ld	a, #0x72
      000152 22               [ 8]  314 	ld	(hl+), a
      000153 3E 6F            [ 8]  315 	ld	a, #0x6f
      000155 22               [ 8]  316 	ld	(hl+), a
      000156 3E 74            [ 8]  317 	ld	a,#0x74
      000158 22               [ 8]  318 	ld	(hl+),a
      000159 22               [ 8]  319 	ld	(hl+), a
      00015A 3E 65            [ 8]  320 	ld	a, #0x65
      00015C 22               [ 8]  321 	ld	(hl+), a
      00015D 3E 6E            [ 8]  322 	ld	a, #0x6e
      00015F 22               [ 8]  323 	ld	(hl+), a
      000160 3E 20            [ 8]  324 	ld	a, #0x20
      000162 22               [ 8]  325 	ld	(hl+), a
      000163 3E 66            [ 8]  326 	ld	a, #0x66
      000165 22               [ 8]  327 	ld	(hl+), a
      000166 3E 6C            [ 8]  328 	ld	a, #0x6c
      000168 22               [ 8]  329 	ld	(hl+), a
      000169 3E 65            [ 8]  330 	ld	a, #0x65
      00016B 22               [ 8]  331 	ld	(hl+), a
      00016C 3E 73            [ 8]  332 	ld	a, #0x73
      00016E 22               [ 8]  333 	ld	(hl+), a
      00016F 3E 68            [ 8]  334 	ld	a, #0x68
      000171 22               [ 8]  335 	ld	(hl+), a
      000172 3E 23            [ 8]  336 	ld	a, #0x23
      000174 22               [ 8]  337 	ld	(hl+), a
      000175 3E 2A            [ 8]  338 	ld	a, #0x2a
      000177 22               [ 8]  339 	ld	(hl+), a
      000178 36 00            [12]  340 	ld	(hl), #0x00
                                    341 ;src/main.c:51: dialog_print(text3, sizeof(text3));
      00017A 3E 46            [ 8]  342 	ld	a, #0x46
      00017C 59               [ 4]  343 	ld	e, c
      00017D 50               [ 4]  344 	ld	d, b
      00017E CDr00r00         [24]  345 	call	_dialog_print
                                    346 ;src/main.c:52: break;
      000181 C3r66r02         [16]  347 	jp	00110$
                                    348 ;src/main.c:54: case 4://CART
      000184                        349 00105$:
                                    350 ;src/main.c:55: char text4[] = "the cart is slick with blood#*";
      000184 F8 68            [12]  351 	ldhl	sp,	#104
      000186 3E 74            [ 8]  352 	ld	a, #0x74
      000188 22               [ 8]  353 	ld	(hl+), a
      000189 3E 68            [ 8]  354 	ld	a, #0x68
      00018B 22               [ 8]  355 	ld	(hl+), a
      00018C 3E 65            [ 8]  356 	ld	a, #0x65
      00018E 22               [ 8]  357 	ld	(hl+), a
      00018F 3E 20            [ 8]  358 	ld	a, #0x20
      000191 22               [ 8]  359 	ld	(hl+), a
      000192 3E 63            [ 8]  360 	ld	a, #0x63
      000194 22               [ 8]  361 	ld	(hl+), a
      000195 3E 61            [ 8]  362 	ld	a, #0x61
      000197 22               [ 8]  363 	ld	(hl+), a
      000198 3E 72            [ 8]  364 	ld	a, #0x72
      00019A 22               [ 8]  365 	ld	(hl+), a
      00019B 3E 74            [ 8]  366 	ld	a, #0x74
      00019D 22               [ 8]  367 	ld	(hl+), a
      00019E 3E 20            [ 8]  368 	ld	a, #0x20
      0001A0 22               [ 8]  369 	ld	(hl+), a
      0001A1 3E 69            [ 8]  370 	ld	a, #0x69
      0001A3 22               [ 8]  371 	ld	(hl+), a
      0001A4 3E 73            [ 8]  372 	ld	a, #0x73
      0001A6 22               [ 8]  373 	ld	(hl+), a
      0001A7 3E 20            [ 8]  374 	ld	a, #0x20
      0001A9 22               [ 8]  375 	ld	(hl+), a
      0001AA 3E 73            [ 8]  376 	ld	a, #0x73
      0001AC 22               [ 8]  377 	ld	(hl+), a
      0001AD 3E 6C            [ 8]  378 	ld	a, #0x6c
      0001AF 22               [ 8]  379 	ld	(hl+), a
      0001B0 3E 69            [ 8]  380 	ld	a, #0x69
      0001B2 22               [ 8]  381 	ld	(hl+), a
      0001B3 3E 63            [ 8]  382 	ld	a, #0x63
      0001B5 22               [ 8]  383 	ld	(hl+), a
      0001B6 3E 6B            [ 8]  384 	ld	a, #0x6b
      0001B8 22               [ 8]  385 	ld	(hl+), a
      0001B9 3E 20            [ 8]  386 	ld	a, #0x20
      0001BB 22               [ 8]  387 	ld	(hl+), a
      0001BC 3E 77            [ 8]  388 	ld	a, #0x77
      0001BE 22               [ 8]  389 	ld	(hl+), a
      0001BF 3E 69            [ 8]  390 	ld	a, #0x69
      0001C1 22               [ 8]  391 	ld	(hl+), a
      0001C2 3E 74            [ 8]  392 	ld	a, #0x74
      0001C4 22               [ 8]  393 	ld	(hl+), a
      0001C5 3E 68            [ 8]  394 	ld	a, #0x68
      0001C7 22               [ 8]  395 	ld	(hl+), a
      0001C8 3E 20            [ 8]  396 	ld	a, #0x20
      0001CA 22               [ 8]  397 	ld	(hl+), a
      0001CB 3E 62            [ 8]  398 	ld	a, #0x62
      0001CD 22               [ 8]  399 	ld	(hl+), a
      0001CE 3E 6C            [ 8]  400 	ld	a, #0x6c
      0001D0 22               [ 8]  401 	ld	(hl+), a
      0001D1 3E 6F            [ 8]  402 	ld	a,#0x6f
      0001D3 22               [ 8]  403 	ld	(hl+),a
      0001D4 22               [ 8]  404 	ld	(hl+), a
      0001D5 3E 64            [ 8]  405 	ld	a, #0x64
      0001D7 22               [ 8]  406 	ld	(hl+), a
      0001D8 3E 23            [ 8]  407 	ld	a, #0x23
      0001DA 22               [ 8]  408 	ld	(hl+), a
      0001DB 3E 2A            [ 8]  409 	ld	a, #0x2a
      0001DD 22               [ 8]  410 	ld	(hl+), a
      0001DE 36 00            [12]  411 	ld	(hl), #0x00
                                    412 ;src/main.c:56: dialog_print(text4, sizeof(text4));
      0001E0 3E 1F            [ 8]  413 	ld	a, #0x1f
      0001E2 21 68 00         [12]  414 	ld	hl, #104
      0001E5 39               [ 8]  415 	add	hl, sp
      0001E6 5D               [ 4]  416 	ld	e, l
      0001E7 54               [ 4]  417 	ld	d, h
      0001E8 CDr00r00         [24]  418 	call	_dialog_print
                                    419 ;src/main.c:57: break;
      0001EB 18 79            [12]  420 	jr	00110$
                                    421 ;src/main.c:59: case 10://DOOR1
      0001ED                        422 00106$:
                                    423 ;src/main.c:60: char text10[] = "a fucking door, mate*";
      0001ED 21 87 00         [12]  424 	ld	hl, #135
      0001F0 39               [ 8]  425 	add	hl, sp
      0001F1 3E 61            [ 8]  426 	ld	a, #0x61
      0001F3 22               [ 8]  427 	ld	(hl+), a
      0001F4 3E 20            [ 8]  428 	ld	a, #0x20
      0001F6 22               [ 8]  429 	ld	(hl+), a
      0001F7 3E 66            [ 8]  430 	ld	a, #0x66
      0001F9 22               [ 8]  431 	ld	(hl+), a
      0001FA 3E 75            [ 8]  432 	ld	a, #0x75
      0001FC 22               [ 8]  433 	ld	(hl+), a
      0001FD 3E 63            [ 8]  434 	ld	a, #0x63
      0001FF 22               [ 8]  435 	ld	(hl+), a
      000200 3E 6B            [ 8]  436 	ld	a, #0x6b
      000202 22               [ 8]  437 	ld	(hl+), a
      000203 3E 69            [ 8]  438 	ld	a, #0x69
      000205 22               [ 8]  439 	ld	(hl+), a
      000206 3E 6E            [ 8]  440 	ld	a, #0x6e
      000208 22               [ 8]  441 	ld	(hl+), a
      000209 3E 67            [ 8]  442 	ld	a, #0x67
      00020B 22               [ 8]  443 	ld	(hl+), a
      00020C 3E 20            [ 8]  444 	ld	a, #0x20
      00020E 22               [ 8]  445 	ld	(hl+), a
      00020F 3E 64            [ 8]  446 	ld	a, #0x64
      000211 22               [ 8]  447 	ld	(hl+), a
      000212 3E 6F            [ 8]  448 	ld	a,#0x6f
      000214 22               [ 8]  449 	ld	(hl+),a
      000215 22               [ 8]  450 	ld	(hl+), a
      000216 3E 72            [ 8]  451 	ld	a, #0x72
      000218 22               [ 8]  452 	ld	(hl+), a
      000219 3E 2C            [ 8]  453 	ld	a, #0x2c
      00021B 22               [ 8]  454 	ld	(hl+), a
      00021C 3E 20            [ 8]  455 	ld	a, #0x20
      00021E 22               [ 8]  456 	ld	(hl+), a
      00021F 3E 6D            [ 8]  457 	ld	a, #0x6d
      000221 22               [ 8]  458 	ld	(hl+), a
      000222 3E 61            [ 8]  459 	ld	a, #0x61
      000224 22               [ 8]  460 	ld	(hl+), a
      000225 3E 74            [ 8]  461 	ld	a, #0x74
      000227 22               [ 8]  462 	ld	(hl+), a
      000228 3E 65            [ 8]  463 	ld	a, #0x65
      00022A 22               [ 8]  464 	ld	(hl+), a
      00022B 3E 2A            [ 8]  465 	ld	a, #0x2a
      00022D 22               [ 8]  466 	ld	(hl+), a
      00022E 36 00            [12]  467 	ld	(hl), #0x00
                                    468 ;src/main.c:61: dialog_print(text10, sizeof(text10));
      000230 3E 16            [ 8]  469 	ld	a, #0x16
      000232 21 87 00         [12]  470 	ld	hl, #135
      000235 39               [ 8]  471 	add	hl, sp
      000236 5D               [ 4]  472 	ld	e, l
      000237 54               [ 4]  473 	ld	d, h
      000238 CDr00r00         [24]  474 	call	_dialog_print
                                    475 ;x:\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      00023B 21r2Ar00         [12]  476 	ld	hl, #(_shadow_OAM + 42)
      00023E 36 24            [12]  477 	ld	(hl), #0x24
      000240 21r2Er00         [12]  478 	ld	hl, #(_shadow_OAM + 46)
      000243 36 26            [12]  479 	ld	(hl), #0x26
                                    480 ;src/main.c:64: HIDE_BKG;
      000245 F0r00            [12]  481 	ldh	a, (_LCDC_REG + 0)
      000247 E6 FE            [ 8]  482 	and	a, #0xfe
      000249 E0r00            [12]  483 	ldh	(_LCDC_REG + 0), a
                                    484 ;src/main.c:65: HIDE_SPRITES;
      00024B F0r00            [12]  485 	ldh	a, (_LCDC_REG + 0)
      00024D E6 FD            [ 8]  486 	and	a, #0xfd
      00024F E0r00            [12]  487 	ldh	(_LCDC_REG + 0), a
                                    488 ;src/main.c:66: HIDE_WIN;
      000251 F0r00            [12]  489 	ldh	a, (_LCDC_REG + 0)
      000253 E6 DF            [ 8]  490 	and	a, #0xdf
      000255 E0r00            [12]  491 	ldh	(_LCDC_REG + 0), a
                                    492 ;src/main.c:67: InitLevel1_1();
      000257 CDr6Br02         [24]  493 	call	_InitLevel1_1
                                    494 ;src/main.c:68: SHOW_BKG;
      00025A F0r00            [12]  495 	ldh	a, (_LCDC_REG + 0)
      00025C F6 01            [ 8]  496 	or	a, #0x01
      00025E E0r00            [12]  497 	ldh	(_LCDC_REG + 0), a
                                    498 ;src/main.c:69: SHOW_SPRITES;
      000260 F0r00            [12]  499 	ldh	a, (_LCDC_REG + 0)
      000262 F6 02            [ 8]  500 	or	a, #0x02
      000264 E0r00            [12]  501 	ldh	(_LCDC_REG + 0), a
                                    502 ;src/main.c:71: }
      000266                        503 00110$:
                                    504 ;src/main.c:72: }
      000266 E8 7F            [16]  505 	add	sp, #127
      000268 E8 1E            [16]  506 	add	sp, #30
      00026A C9               [16]  507 	ret
                                    508 ;src/main.c:74: void InitLevel1_1() {
                                    509 ;	---------------------------------
                                    510 ; Function InitLevel1_1
                                    511 ; ---------------------------------
      00026B                        512 _InitLevel1_1::
                                    513 ;src/main.c:75: action_func = Level1_1_Act;
      00026B 21r00r00         [12]  514 	ld	hl, #_action_func
      00026E 3Er13            [ 8]  515 	ld	a, #<(_Level1_1_Act)
      000270 22               [ 8]  516 	ld	(hl+), a
      000271 36s00            [12]  517 	ld	(hl), #>(_Level1_1_Act)
                                    518 ;src/main.c:76: facing = 1;
      000273 21r00r00         [12]  519 	ld	hl, #_facing
      000276 36 01            [12]  520 	ld	(hl), #0x01
                                    521 ;src/main.c:84: set_bkg_data(0,Level1_1_sprite_size,Level1_1_sprite);
      000278 11r00r00         [12]  522 	ld	de, #_Level1_1_sprite
      00027B D5               [16]  523 	push	de
      00027C 21 00 4C         [12]  524 	ld	hl, #0x4c00
      00027F E5               [16]  525 	push	hl
      000280 CDr00r00         [24]  526 	call	_set_bkg_data
      000283 E8 04            [16]  527 	add	sp, #4
                                    528 ;src/main.c:85: set_bkg_tiles(0,0,MAP_WIDTH,MAP_HEIGHT,Level1_1_map);
      000285 11r00r00         [12]  529 	ld	de, #_Level1_1_map
      000288 D5               [16]  530 	push	de
      000289 21 14 12         [12]  531 	ld	hl, #0x1214
      00028C E5               [16]  532 	push	hl
      00028D AF               [ 4]  533 	xor	a, a
      00028E 0F               [ 4]  534 	rrca
      00028F F5               [16]  535 	push	af
      000290 CDr00r00         [24]  536 	call	_set_bkg_tiles
      000293 E8 06            [16]  537 	add	sp, #6
                                    538 ;src/main.c:86: set_sprite_data(32,8,Level1_Door_sprite);
      000295 11r00r00         [12]  539 	ld	de, #_Level1_Door_sprite
      000298 D5               [16]  540 	push	de
      000299 21 20 08         [12]  541 	ld	hl, #0x820
      00029C E5               [16]  542 	push	hl
      00029D CDr00r00         [24]  543 	call	_set_sprite_data
      0002A0 E8 04            [16]  544 	add	sp, #4
                                    545 ;x:\gbdk\include\gb\gb.h:1804: shadow_OAM[nb].tile=tile;
      0002A2 21r2Ar00         [12]  546 	ld	hl, #(_shadow_OAM + 42)
      0002A5 36 20            [12]  547 	ld	(hl), #0x20
      0002A7 21r2Er00         [12]  548 	ld	hl, #(_shadow_OAM + 46)
      0002AA 36 22            [12]  549 	ld	(hl), #0x22
                                    550 ;x:\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      0002AC 21r28r00         [12]  551 	ld	hl, #(_shadow_OAM + 40)
                                    552 ;x:\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      0002AF 3E 14            [ 8]  553 	ld	a, #0x14
      0002B1 22               [ 8]  554 	ld	(hl+), a
      0002B2 36 38            [12]  555 	ld	(hl), #0x38
                                    556 ;x:\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      0002B4 21r2Cr00         [12]  557 	ld	hl, #(_shadow_OAM + 44)
                                    558 ;x:\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      0002B7 3E 14            [ 8]  559 	ld	a, #0x14
      0002B9 22               [ 8]  560 	ld	(hl+), a
      0002BA 36 40            [12]  561 	ld	(hl), #0x40
                                    562 ;src/main.c:92: playerMapX = 3;
      0002BC 21r00r00         [12]  563 	ld	hl, #_playerMapX
      0002BF 36 03            [12]  564 	ld	(hl), #0x03
                                    565 ;src/main.c:93: playerMapY = 3;
      0002C1 21r00r00         [12]  566 	ld	hl, #_playerMapY
      0002C4 36 03            [12]  567 	ld	(hl), #0x03
                                    568 ;src/main.c:95: PlacePlayer();
      0002C6 CDr00r00         [24]  569 	call	_PlacePlayer
                                    570 ;src/main.c:97: map[0][9] = CHUTE;
      0002C9 21r0Br00         [12]  571 	ld	hl, #(_map + 9)
      0002CC 36 02            [12]  572 	ld	(hl), #0x02
                                    573 ;src/main.c:98: map[0][10] = CHUTE;
      0002CE 21r0Cr00         [12]  574 	ld	hl, #(_map + 10)
      0002D1 36 02            [12]  575 	ld	(hl), #0x02
                                    576 ;src/main.c:100: map[1][9] = SOLID;
      0002D3 21r1Dr00         [12]  577 	ld	hl, #(_map + 27)
      0002D6 36 01            [12]  578 	ld	(hl), #0x01
                                    579 ;src/main.c:101: map[1][10] = SOLID;
      0002D8 21r1Er00         [12]  580 	ld	hl, #(_map + 28)
      0002DB 36 01            [12]  581 	ld	(hl), #0x01
                                    582 ;src/main.c:103: for (uint8_t i = 2; i < 5; i++) map[i][9] = PILE;
      0002DD 0E 02            [ 8]  583 	ld	c, #0x02
      0002DF                        584 00110$:
      0002DF 79               [ 4]  585 	ld	a, c
      0002E0 D6 05            [ 8]  586 	sub	a, #0x05
      0002E2 30 16            [12]  587 	jr	NC, 00101$
      0002E4 06 00            [ 8]  588 	ld	b, #0x00
      0002E6 69               [ 4]  589 	ld	l, c
      0002E7 60               [ 4]  590 	ld	h, b
      0002E8 29               [ 8]  591 	add	hl, hl
      0002E9 29               [ 8]  592 	add	hl, hl
      0002EA 29               [ 8]  593 	add	hl, hl
      0002EB 09               [ 8]  594 	add	hl, bc
      0002EC 29               [ 8]  595 	add	hl, hl
      0002ED 11r02r00         [12]  596 	ld	de, #_map
      0002F0 19               [ 8]  597 	add	hl, de
      0002F1 11 09 00         [12]  598 	ld	de, #0x0009
      0002F4 19               [ 8]  599 	add	hl, de
      0002F5 36 03            [12]  600 	ld	(hl), #0x03
      0002F7 0C               [ 4]  601 	inc	c
      0002F8 18 E5            [12]  602 	jr	00110$
      0002FA                        603 00101$:
                                    604 ;src/main.c:104: for (uint8_t i = 2; i < 5; i++) map[i][10] = PILE;
      0002FA 0E 02            [ 8]  605 	ld	c, #0x02
      0002FC                        606 00113$:
      0002FC 79               [ 4]  607 	ld	a, c
      0002FD D6 05            [ 8]  608 	sub	a, #0x05
      0002FF 30 16            [12]  609 	jr	NC, 00102$
      000301 06 00            [ 8]  610 	ld	b, #0x00
      000303 69               [ 4]  611 	ld	l, c
      000304 60               [ 4]  612 	ld	h, b
      000305 29               [ 8]  613 	add	hl, hl
      000306 29               [ 8]  614 	add	hl, hl
      000307 29               [ 8]  615 	add	hl, hl
      000308 09               [ 8]  616 	add	hl, bc
      000309 29               [ 8]  617 	add	hl, hl
      00030A 11r02r00         [12]  618 	ld	de, #_map
      00030D 19               [ 8]  619 	add	hl, de
      00030E 11 0A 00         [12]  620 	ld	de, #0x000a
      000311 19               [ 8]  621 	add	hl, de
      000312 36 03            [12]  622 	ld	(hl), #0x03
      000314 0C               [ 4]  623 	inc	c
      000315 18 E5            [12]  624 	jr	00113$
      000317                        625 00102$:
                                    626 ;src/main.c:106: for (uint8_t i = 7; i < 11; i++) map[i][9] = CART;
      000317 0E 07            [ 8]  627 	ld	c, #0x07
      000319                        628 00116$:
      000319 79               [ 4]  629 	ld	a, c
      00031A D6 0B            [ 8]  630 	sub	a, #0x0b
      00031C 30 16            [12]  631 	jr	NC, 00103$
      00031E 06 00            [ 8]  632 	ld	b, #0x00
      000320 69               [ 4]  633 	ld	l, c
      000321 60               [ 4]  634 	ld	h, b
      000322 29               [ 8]  635 	add	hl, hl
      000323 29               [ 8]  636 	add	hl, hl
      000324 29               [ 8]  637 	add	hl, hl
      000325 09               [ 8]  638 	add	hl, bc
      000326 29               [ 8]  639 	add	hl, hl
      000327 11r02r00         [12]  640 	ld	de, #_map
      00032A 19               [ 8]  641 	add	hl, de
      00032B 11 09 00         [12]  642 	ld	de, #0x0009
      00032E 19               [ 8]  643 	add	hl, de
      00032F 36 04            [12]  644 	ld	(hl), #0x04
      000331 0C               [ 4]  645 	inc	c
      000332 18 E5            [12]  646 	jr	00116$
      000334                        647 00103$:
                                    648 ;src/main.c:107: for (uint8_t i = 7; i < 11; i++) map[i][10] = CART;
      000334 0E 07            [ 8]  649 	ld	c, #0x07
      000336                        650 00119$:
      000336 79               [ 4]  651 	ld	a, c
      000337 D6 0B            [ 8]  652 	sub	a, #0x0b
      000339 30 16            [12]  653 	jr	NC, 00104$
      00033B 06 00            [ 8]  654 	ld	b, #0x00
      00033D 69               [ 4]  655 	ld	l, c
      00033E 60               [ 4]  656 	ld	h, b
      00033F 29               [ 8]  657 	add	hl, hl
      000340 29               [ 8]  658 	add	hl, hl
      000341 29               [ 8]  659 	add	hl, hl
      000342 09               [ 8]  660 	add	hl, bc
      000343 29               [ 8]  661 	add	hl, hl
      000344 11r02r00         [12]  662 	ld	de, #_map
      000347 19               [ 8]  663 	add	hl, de
      000348 11 0A 00         [12]  664 	ld	de, #0x000a
      00034B 19               [ 8]  665 	add	hl, de
      00034C 36 04            [12]  666 	ld	(hl), #0x04
      00034E 0C               [ 4]  667 	inc	c
      00034F 18 E5            [12]  668 	jr	00119$
      000351                        669 00104$:
                                    670 ;src/main.c:109: map[6][0]= DOOR;
      000351 21r6Er00         [12]  671 	ld	hl, #(_map + 108)
      000354 36 0A            [12]  672 	ld	(hl), #0x0a
                                    673 ;src/main.c:110: }
      000356 C9               [16]  674 	ret
                                    675 ;src/main.c:112: int CheckCollision() {
                                    676 ;	---------------------------------
                                    677 ; Function CheckCollision
                                    678 ; ---------------------------------
      000357                        679 _CheckCollision::
      000357 3B               [ 8]  680 	dec	sp
                                    681 ;src/main.c:113: int8_t x = 0;
      000358 1E 00            [ 8]  682 	ld	e, #0x00
                                    683 ;src/main.c:114: int8_t y = 0;
      00035A F8 00            [12]  684 	ldhl	sp,	#0
      00035C 36 00            [12]  685 	ld	(hl), #0x00
                                    686 ;src/main.c:116: switch (facing) {
      00035E FAr00r00         [16]  687 	ld	a, (#_facing)
      000361 B7               [ 4]  688 	or	a, a
      000362 28 13            [12]  689 	jr	Z, 00101$
      000364 FAr00r00         [16]  690 	ld	a, (#_facing)
      000367 3D               [ 4]  691 	dec	a
      000368 28 13            [12]  692 	jr	Z, 00102$
      00036A FAr00r00         [16]  693 	ld	a,(#_facing)
      00036D FE 02            [ 8]  694 	cp	a,#0x02
      00036F 28 12            [12]  695 	jr	Z, 00103$
      000371 D6 03            [ 8]  696 	sub	a, #0x03
      000373 28 12            [12]  697 	jr	Z, 00104$
      000375 18 12            [12]  698 	jr	00105$
                                    699 ;src/main.c:117: case 0:
      000377                        700 00101$:
                                    701 ;src/main.c:118: y = -1;
      000377 F8 00            [12]  702 	ldhl	sp,	#0
      000379 36 FF            [12]  703 	ld	(hl), #0xff
                                    704 ;src/main.c:119: break;
      00037B 18 0C            [12]  705 	jr	00105$
                                    706 ;src/main.c:121: case 1:
      00037D                        707 00102$:
                                    708 ;src/main.c:122: y = 1;
      00037D F8 00            [12]  709 	ldhl	sp,	#0
      00037F 36 01            [12]  710 	ld	(hl), #0x01
                                    711 ;src/main.c:123: break;
      000381 18 06            [12]  712 	jr	00105$
                                    713 ;src/main.c:125: case 2:
      000383                        714 00103$:
                                    715 ;src/main.c:126: x = -1;
      000383 1E FF            [ 8]  716 	ld	e, #0xff
                                    717 ;src/main.c:127: break;
      000385 18 02            [12]  718 	jr	00105$
                                    719 ;src/main.c:129: case 3:
      000387                        720 00104$:
                                    721 ;src/main.c:130: x = 1;
      000387 1E 01            [ 8]  722 	ld	e, #0x01
                                    723 ;src/main.c:132: }
      000389                        724 00105$:
                                    725 ;src/main.c:134: if (map[playerMapX+x][playerMapY+y]) return map[playerMapX+x][playerMapY+y];
      000389 FAr00r00         [16]  726 	ld	a, (#_playerMapX)
      00038C 4F               [ 4]  727 	ld	c, a
      00038D 07               [ 4]  728 	rlca
      00038E 9F               [ 4]  729 	sbc	a, a
      00038F 47               [ 4]  730 	ld	b, a
      000390 7B               [ 4]  731 	ld	a, e
      000391 6F               [ 4]  732 	ld	l, a
                                    733 ;	spillPairReg hl
                                    734 ;	spillPairReg hl
      000392 07               [ 4]  735 	rlca
      000393 9F               [ 4]  736 	sbc	a, a
      000394 67               [ 4]  737 	ld	h, a
                                    738 ;	spillPairReg hl
                                    739 ;	spillPairReg hl
      000395 09               [ 8]  740 	add	hl, bc
      000396 4D               [ 4]  741 	ld	c,l
      000397 44               [ 4]  742 	ld	b,h
      000398 29               [ 8]  743 	add	hl, hl
      000399 29               [ 8]  744 	add	hl, hl
      00039A 29               [ 8]  745 	add	hl, hl
      00039B 09               [ 8]  746 	add	hl, bc
      00039C 29               [ 8]  747 	add	hl, hl
      00039D 7D               [ 4]  748 	ld	a, l
      00039E C6r02            [ 8]  749 	add	a, #<(_map)
      0003A0 5F               [ 4]  750 	ld	e, a
      0003A1 7C               [ 4]  751 	ld	a, h
      0003A2 CEs00            [ 8]  752 	adc	a, #>(_map)
      0003A4 57               [ 4]  753 	ld	d, a
      0003A5 FAr00r00         [16]  754 	ld	a, (#_playerMapY)
      0003A8 F8 00            [12]  755 	ldhl	sp,	#0
      0003AA 86               [ 8]  756 	add	a, (hl)
      0003AB 6F               [ 4]  757 	ld	l, a
      0003AC 26 00            [ 8]  758 	ld	h, #0x00
      0003AE 19               [ 8]  759 	add	hl, de
      0003AF 7E               [ 8]  760 	ld	a, (hl)
      0003B0 B7               [ 4]  761 	or	a, a
      0003B1 28 05            [12]  762 	jr	Z, 00114$
      0003B3 4F               [ 4]  763 	ld	c, a
      0003B4 06 00            [ 8]  764 	ld	b, #0x00
      0003B6 18 66            [12]  765 	jr	00116$
      0003B8                        766 00114$:
                                    767 ;src/main.c:136: else if (((playerMapX + x) > MAP_WIDTH-2) || ((playerMapX + x) < 0)) return 1;
      0003B8 58               [ 4]  768 	ld	e, b
      0003B9 16 00            [ 8]  769 	ld	d, #0x00
      0003BB 3E 12            [ 8]  770 	ld	a, #0x12
      0003BD B9               [ 4]  771 	cp	a, c
      0003BE 3E 00            [ 8]  772 	ld	a, #0x00
      0003C0 98               [ 4]  773 	sbc	a, b
      0003C1 CB 7B            [ 8]  774 	bit	7, e
      0003C3 28 07            [12]  775 	jr	Z, 00171$
      0003C5 CB 7A            [ 8]  776 	bit	7, d
      0003C7 20 08            [12]  777 	jr	NZ, 00172$
      0003C9 BF               [ 4]  778 	cp	a, a
      0003CA 18 05            [12]  779 	jr	00172$
      0003CC                        780 00171$:
      0003CC CB 7A            [ 8]  781 	bit	7, d
      0003CE 28 01            [12]  782 	jr	Z, 00172$
      0003D0 37               [ 4]  783 	scf
      0003D1                        784 00172$:
      0003D1 38 04            [12]  785 	jr	C, 00109$
      0003D3 CB 78            [ 8]  786 	bit	7, b
      0003D5 28 05            [12]  787 	jr	Z, 00110$
      0003D7                        788 00109$:
      0003D7 01 01 00         [12]  789 	ld	bc, #0x0001
      0003DA 18 42            [12]  790 	jr	00116$
      0003DC                        791 00110$:
                                    792 ;src/main.c:138: else if (((playerMapY + y) > MAP_HEIGHT-3) || ((playerMapY + y) < 1)) return 1;
      0003DC FAr00r00         [16]  793 	ld	a, (#_playerMapY)
      0003DF 4F               [ 4]  794 	ld	c, a
      0003E0 07               [ 4]  795 	rlca
      0003E1 9F               [ 4]  796 	sbc	a, a
      0003E2 47               [ 4]  797 	ld	b, a
      0003E3 F8 00            [12]  798 	ldhl	sp,	#0
      0003E5 7E               [ 8]  799 	ld	a, (hl)
      0003E6 F5               [16]  800 	push	af
      0003E7 07               [ 4]  801 	rlca
      0003E8 9F               [ 4]  802 	sbc	a, a
      0003E9 5F               [ 4]  803 	ld	e, a
      0003EA F1               [12]  804 	pop	af
      0003EB 81               [ 4]  805 	add	a, c
      0003EC 4F               [ 4]  806 	ld	c, a
      0003ED 7B               [ 4]  807 	ld	a, e
      0003EE 88               [ 4]  808 	adc	a, b
      0003EF 47               [ 4]  809 	ld	b, a
      0003F0 58               [ 4]  810 	ld	e, b
      0003F1 16 00            [ 8]  811 	ld	d, #0x00
      0003F3 3E 0F            [ 8]  812 	ld	a, #0x0f
      0003F5 B9               [ 4]  813 	cp	a, c
      0003F6 3E 00            [ 8]  814 	ld	a, #0x00
      0003F8 98               [ 4]  815 	sbc	a, b
      0003F9 CB 7B            [ 8]  816 	bit	7, e
      0003FB 28 07            [12]  817 	jr	Z, 00173$
      0003FD CB 7A            [ 8]  818 	bit	7, d
      0003FF 20 08            [12]  819 	jr	NZ, 00174$
      000401 BF               [ 4]  820 	cp	a, a
      000402 18 05            [12]  821 	jr	00174$
      000404                        822 00173$:
      000404 CB 7A            [ 8]  823 	bit	7, d
      000406 28 01            [12]  824 	jr	Z, 00174$
      000408 37               [ 4]  825 	scf
      000409                        826 00174$:
      000409 38 0B            [12]  827 	jr	C, 00106$
      00040B 79               [ 4]  828 	ld	a, c
      00040C D6 01            [ 8]  829 	sub	a, #0x01
      00040E 78               [ 4]  830 	ld	a, b
      00040F 17               [ 4]  831 	rla
      000410 3F               [ 4]  832 	ccf
      000411 1F               [ 4]  833 	rra
      000412 DE 80            [ 8]  834 	sbc	a, #0x80
      000414 30 05            [12]  835 	jr	NC, 00115$
      000416                        836 00106$:
      000416 01 01 00         [12]  837 	ld	bc, #0x0001
      000419 18 03            [12]  838 	jr	00116$
      00041B                        839 00115$:
                                    840 ;src/main.c:140: return 0;
      00041B 01 00 00         [12]  841 	ld	bc, #0x0000
      00041E                        842 00116$:
                                    843 ;src/main.c:141: }
      00041E 33               [ 8]  844 	inc	sp
      00041F C9               [16]  845 	ret
                                    846 ;src/main.c:143: void Move_MainCharacter() {
                                    847 ;	---------------------------------
                                    848 ; Function Move_MainCharacter
                                    849 ; ---------------------------------
      000420                        850 _Move_MainCharacter::
                                    851 ;src/main.c:144: if ((((playerX) % TILES) == 0) && (((playerY) % TILES) == 0)) {
      000420 FAr00r00         [16]  852 	ld	a, (#_playerX)
      000423 5F               [ 4]  853 	ld	e, a
      000424 07               [ 4]  854 	rlca
      000425 9F               [ 4]  855 	sbc	a, a
      000426 57               [ 4]  856 	ld	d, a
      000427 01 08 00         [12]  857 	ld	bc, #0x0008
      00042A CDr00r00         [24]  858 	call	__modsint
      00042D 78               [ 4]  859 	ld	a, b
      00042E B1               [ 4]  860 	or	a, c
      00042F 20 1B            [12]  861 	jr	NZ, 00102$
      000431 FAr00r00         [16]  862 	ld	a, (#_playerY)
      000434 5F               [ 4]  863 	ld	e, a
      000435 07               [ 4]  864 	rlca
      000436 9F               [ 4]  865 	sbc	a, a
      000437 57               [ 4]  866 	ld	d, a
      000438 01 08 00         [12]  867 	ld	bc, #0x0008
      00043B CDr00r00         [24]  868 	call	__modsint
      00043E 78               [ 4]  869 	ld	a, b
      00043F B1               [ 4]  870 	or	a, c
      000440 20 0A            [12]  871 	jr	NZ, 00102$
                                    872 ;src/main.c:145: playerMoving = 0;
      000442 21r00r00         [12]  873 	ld	hl, #_playerMoving
      000445 36 00            [12]  874 	ld	(hl), #0x00
                                    875 ;src/main.c:146: MainCharacter_idle();
      000447 CDr00r00         [24]  876 	call	_MainCharacter_idle
      00044A 18 08            [12]  877 	jr	00103$
      00044C                        878 00102$:
                                    879 ;src/main.c:149: MainCharacter_walk();
      00044C CDr00r00         [24]  880 	call	_MainCharacter_walk
                                    881 ;src/main.c:150: playerMoving = 1;
      00044F 21r00r00         [12]  882 	ld	hl, #_playerMoving
      000452 36 01            [12]  883 	ld	(hl), #0x01
      000454                        884 00103$:
                                    885 ;src/main.c:153: if (playerMoving == 1) {
      000454 FAr00r00         [16]  886 	ld	a, (#_playerMoving)
      000457 3D               [ 4]  887 	dec	a
      000458 20 2C            [12]  888 	jr	NZ, 00133$
                                    889 ;src/main.c:154: switch(facing) {
      00045A FAr00r00         [16]  890 	ld	a, (#_facing)
      00045D B7               [ 4]  891 	or	a, a
      00045E 28 12            [12]  892 	jr	Z, 00105$
      000460 FAr00r00         [16]  893 	ld	a, (#_facing)
      000463 3D               [ 4]  894 	dec	a
      000464 28 11            [12]  895 	jr	Z, 00106$
      000466 FAr00r00         [16]  896 	ld	a,(#_facing)
      000469 FE 02            [ 8]  897 	cp	a,#0x02
      00046B 28 0F            [12]  898 	jr	Z, 00107$
      00046D D6 03            [ 8]  899 	sub	a, #0x03
      00046F 28 10            [12]  900 	jr	Z, 00108$
      000471 C9               [16]  901 	ret
                                    902 ;src/main.c:155: case 0:
      000472                        903 00105$:
                                    904 ;src/main.c:156: playerY -= 1;
      000472 21r00r00         [12]  905 	ld	hl, #_playerY
      000475 35               [12]  906 	dec	(hl)
                                    907 ;src/main.c:157: break;
      000476 C9               [16]  908 	ret
                                    909 ;src/main.c:158: case 1:
      000477                        910 00106$:
                                    911 ;src/main.c:159: playerY += 1;
      000477 21r00r00         [12]  912 	ld	hl, #_playerY
      00047A 34               [12]  913 	inc	(hl)
                                    914 ;src/main.c:160: break;
      00047B C9               [16]  915 	ret
                                    916 ;src/main.c:161: case 2:
      00047C                        917 00107$:
                                    918 ;src/main.c:162: playerX -= 1;
      00047C 21r00r00         [12]  919 	ld	hl, #_playerX
      00047F 35               [12]  920 	dec	(hl)
                                    921 ;src/main.c:163: break;
      000480 C9               [16]  922 	ret
                                    923 ;src/main.c:164: case 3:
      000481                        924 00108$:
                                    925 ;src/main.c:165: playerX += 1;
      000481 21r00r00         [12]  926 	ld	hl, #_playerX
      000484 34               [12]  927 	inc	(hl)
                                    928 ;src/main.c:167: }
      000485 C9               [16]  929 	ret
      000486                        930 00133$:
                                    931 ;src/main.c:170: if (KEY_PRESSED(J_UP)) {
      000486 FAr01r00         [16]  932 	ld	a, (#_keys)
      000489 CB 57            [ 8]  933 	bit	2, a
      00048B 28 16            [12]  934 	jr	Z, 00127$
                                    935 ;src/main.c:171: facing = 0;
      00048D 21r00r00         [12]  936 	ld	hl, #_facing
      000490 36 00            [12]  937 	ld	(hl), #0x00
                                    938 ;src/main.c:172: if (!CheckCollision()) {
      000492 CDr57r03         [24]  939 	call	_CheckCollision
      000495 78               [ 4]  940 	ld	a, b
      000496 B1               [ 4]  941 	or	a, c
      000497 20 55            [12]  942 	jr	NZ, 00128$
                                    943 ;src/main.c:173: playerY -= 1;
      000499 21r00r00         [12]  944 	ld	hl, #_playerY
      00049C 35               [12]  945 	dec	(hl)
                                    946 ;src/main.c:174: playerMapY -= 1;
      00049D 21r00r00         [12]  947 	ld	hl, #_playerMapY
      0004A0 35               [12]  948 	dec	(hl)
      0004A1 18 4B            [12]  949 	jr	00128$
      0004A3                        950 00127$:
                                    951 ;src/main.c:177: else if (KEY_PRESSED(J_DOWN)) {
      0004A3 CB 5F            [ 8]  952 	bit	3, a
      0004A5 28 16            [12]  953 	jr	Z, 00124$
                                    954 ;src/main.c:178: facing = 1;
      0004A7 21r00r00         [12]  955 	ld	hl, #_facing
      0004AA 36 01            [12]  956 	ld	(hl), #0x01
                                    957 ;src/main.c:179: if (!CheckCollision()) {
      0004AC CDr57r03         [24]  958 	call	_CheckCollision
      0004AF 78               [ 4]  959 	ld	a, b
      0004B0 B1               [ 4]  960 	or	a, c
      0004B1 20 3B            [12]  961 	jr	NZ, 00128$
                                    962 ;src/main.c:180: playerY += 1;
      0004B3 21r00r00         [12]  963 	ld	hl, #_playerY
      0004B6 34               [12]  964 	inc	(hl)
                                    965 ;src/main.c:181: playerMapY += 1;
      0004B7 21r00r00         [12]  966 	ld	hl, #_playerMapY
      0004BA 34               [12]  967 	inc	(hl)
      0004BB 18 31            [12]  968 	jr	00128$
      0004BD                        969 00124$:
                                    970 ;src/main.c:184: else if (KEY_PRESSED(J_LEFT)) {
      0004BD CB 4F            [ 8]  971 	bit	1, a
      0004BF 28 16            [12]  972 	jr	Z, 00121$
                                    973 ;src/main.c:185: facing = 2;
      0004C1 21r00r00         [12]  974 	ld	hl, #_facing
      0004C4 36 02            [12]  975 	ld	(hl), #0x02
                                    976 ;src/main.c:186: if (!CheckCollision()) {
      0004C6 CDr57r03         [24]  977 	call	_CheckCollision
      0004C9 78               [ 4]  978 	ld	a, b
      0004CA B1               [ 4]  979 	or	a, c
      0004CB 20 21            [12]  980 	jr	NZ, 00128$
                                    981 ;src/main.c:187: playerX -= 1;
      0004CD 21r00r00         [12]  982 	ld	hl, #_playerX
      0004D0 35               [12]  983 	dec	(hl)
                                    984 ;src/main.c:188: playerMapX -= 1;
      0004D1 21r00r00         [12]  985 	ld	hl, #_playerMapX
      0004D4 35               [12]  986 	dec	(hl)
      0004D5 18 17            [12]  987 	jr	00128$
      0004D7                        988 00121$:
                                    989 ;src/main.c:191: else if (KEY_PRESSED(J_RIGHT)) {
      0004D7 0F               [ 4]  990 	rrca
      0004D8 30 14            [12]  991 	jr	NC, 00128$
                                    992 ;src/main.c:192: facing = 3;
      0004DA 21r00r00         [12]  993 	ld	hl, #_facing
      0004DD 36 03            [12]  994 	ld	(hl), #0x03
                                    995 ;src/main.c:193: if (!CheckCollision()) {
      0004DF CDr57r03         [24]  996 	call	_CheckCollision
      0004E2 78               [ 4]  997 	ld	a, b
      0004E3 B1               [ 4]  998 	or	a, c
      0004E4 20 08            [12]  999 	jr	NZ, 00128$
                                   1000 ;src/main.c:194: playerX += 1;
      0004E6 21r00r00         [12] 1001 	ld	hl, #_playerX
      0004E9 34               [12] 1002 	inc	(hl)
                                   1003 ;src/main.c:195: playerMapX += 1;
      0004EA 21r00r00         [12] 1004 	ld	hl, #_playerMapX
      0004ED 34               [12] 1005 	inc	(hl)
      0004EE                       1006 00128$:
                                   1007 ;src/main.c:199: if (KEY_TICKED(J_A)) {
      0004EE FAr01r00         [16] 1008 	ld	a, (#_keys)
      0004F1 CB 67            [ 8] 1009 	bit	4, a
      0004F3 C8               [20] 1010 	ret	Z
      0004F4 FAr00r00         [16] 1011 	ld	a, (#_previous_keys)
      0004F7 CB 67            [ 8] 1012 	bit	4, a
      0004F9 C0               [20] 1013 	ret	NZ
                                   1014 ;src/main.c:200: action_func();
      0004FA 21r00r00         [12] 1015 	ld	hl, #_action_func
      0004FD 6E               [ 8] 1016 	ld	l, (hl)
                                   1017 ;	spillPairReg hl
                                   1018 ;	spillPairReg hl
      0004FE FAr01r00         [16] 1019 	ld	a, (_action_func + 1)
      000501 67               [ 4] 1020 	ld	h, a
                                   1021 ;	spillPairReg hl
                                   1022 ;	spillPairReg hl
                                   1023 ;src/main.c:203: }
      000502 E9               [ 4] 1024 	jp	(hl)
                                   1025 ;src/main.c:205: void main(void)
                                   1026 ;	---------------------------------
                                   1027 ; Function main
                                   1028 ; ---------------------------------
      000503                       1029 _main::
                                   1030 ;src/main.c:207: init_win(0xCC);
      000503 3E CC            [ 8] 1031 	ld	a, #0xcc
      000505 F5               [16] 1032 	push	af
      000506 33               [ 8] 1033 	inc	sp
      000507 CDr00r00         [24] 1034 	call	_init_win
      00050A 33               [ 8] 1035 	inc	sp
                                   1036 ;src/main.c:208: set_win_data(Font_sprite_start,Font_sprite_size,Font_tiles);
      00050B 11r00r00         [12] 1037 	ld	de, #_Font_tiles
      00050E D5               [16] 1038 	push	de
      00050F 21 CC 34         [12] 1039 	ld	hl, #0x34cc
      000512 E5               [16] 1040 	push	hl
      000513 CDr00r00         [24] 1041 	call	_set_win_data
      000516 E8 04            [16] 1042 	add	sp, #4
                                   1043 ;src/main.c:209: set_win_data(0xC4,8,Dialog_Border_sprite);
      000518 11r00r00         [12] 1044 	ld	de, #_Dialog_Border_sprite
      00051B D5               [16] 1045 	push	de
      00051C 21 C4 08         [12] 1046 	ld	hl, #0x8c4
      00051F E5               [16] 1047 	push	hl
      000520 CDr00r00         [24] 1048 	call	_set_win_data
      000523 E8 04            [16] 1049 	add	sp, #4
                                   1050 ;src/main.c:210: set_win_tiles(0,0,20,6,Dialog_Border_map);
      000525 11r00r00         [12] 1051 	ld	de, #_Dialog_Border_map
      000528 D5               [16] 1052 	push	de
      000529 21 14 06         [12] 1053 	ld	hl, #0x614
      00052C E5               [16] 1054 	push	hl
      00052D AF               [ 4] 1055 	xor	a, a
      00052E 0F               [ 4] 1056 	rrca
      00052F F5               [16] 1057 	push	af
      000530 CDr00r00         [24] 1058 	call	_set_win_tiles
      000533 E8 06            [16] 1059 	add	sp, #6
                                   1060 ;src/main.c:212: init_bkg(0x00);
      000535 AF               [ 4] 1061 	xor	a, a
      000536 F5               [16] 1062 	push	af
      000537 33               [ 8] 1063 	inc	sp
      000538 CDr00r00         [24] 1064 	call	_init_bkg
      00053B 33               [ 8] 1065 	inc	sp
                                   1066 ;src/main.c:213: InitLevel1_1();
      00053C CDr6Br02         [24] 1067 	call	_InitLevel1_1
                                   1068 ;src/main.c:214: SHOW_BKG;
      00053F F0r00            [12] 1069 	ldh	a, (_LCDC_REG + 0)
      000541 F6 01            [ 8] 1070 	or	a, #0x01
      000543 E0r00            [12] 1071 	ldh	(_LCDC_REG + 0), a
                                   1072 ;src/main.c:216: SPRITES_8x16;
      000545 F0r00            [12] 1073 	ldh	a, (_LCDC_REG + 0)
      000547 F6 04            [ 8] 1074 	or	a, #0x04
      000549 E0r00            [12] 1075 	ldh	(_LCDC_REG + 0), a
                                   1076 ;src/main.c:217: set_sprite_data(0, 32, MainCharacter_sprite);
      00054B 11r00r00         [12] 1077 	ld	de, #_MainCharacter_sprite
      00054E D5               [16] 1078 	push	de
      00054F 21 00 20         [12] 1079 	ld	hl, #0x2000
      000552 E5               [16] 1080 	push	hl
      000553 CDr00r00         [24] 1081 	call	_set_sprite_data
      000556 E8 04            [16] 1082 	add	sp, #4
                                   1083 ;src/main.c:218: SHOW_SPRITES;
      000558 F0r00            [12] 1084 	ldh	a, (_LCDC_REG + 0)
      00055A F6 02            [ 8] 1085 	or	a, #0x02
      00055C E0r00            [12] 1086 	ldh	(_LCDC_REG + 0), a
                                   1087 ;src/main.c:220: DISPLAY_ON;
      00055E F0r00            [12] 1088 	ldh	a, (_LCDC_REG + 0)
      000560 F6 80            [ 8] 1089 	or	a, #0x80
      000562 E0r00            [12] 1090 	ldh	(_LCDC_REG + 0), a
                                   1091 ;src/main.c:222: while(1) {
      000564                       1092 00102$:
                                   1093 ;src/main.c:223: Move_MainCharacter();
      000564 CDr20r04         [24] 1094 	call	_Move_MainCharacter
                                   1095 ;src/main.c:224: move_sprite(0, playerX+8, playerY+16);
      000567 FAr00r00         [16] 1096 	ld	a, (#_playerY)
      00056A C6 10            [ 8] 1097 	add	a, #0x10
      00056C 4F               [ 4] 1098 	ld	c, a
      00056D FAr00r00         [16] 1099 	ld	a, (#_playerX)
      000570 C6 08            [ 8] 1100 	add	a, #0x08
      000572 47               [ 4] 1101 	ld	b, a
                                   1102 ;x:\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000573 21r00r00         [12] 1103 	ld	hl, #_shadow_OAM
                                   1104 ;x:\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000576 79               [ 4] 1105 	ld	a, c
      000577 22               [ 8] 1106 	ld	(hl+), a
      000578 70               [ 8] 1107 	ld	(hl), b
                                   1108 ;src/main.c:225: move_sprite(2, playerX+16, playerY+16);
      000579 FAr00r00         [16] 1109 	ld	a, (#_playerY)
      00057C C6 10            [ 8] 1110 	add	a, #0x10
      00057E 4F               [ 4] 1111 	ld	c, a
      00057F FAr00r00         [16] 1112 	ld	a, (#_playerX)
      000582 C6 10            [ 8] 1113 	add	a, #0x10
      000584 47               [ 4] 1114 	ld	b, a
                                   1115 ;x:\gbdk\include\gb\gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000585 21r08r00         [12] 1116 	ld	hl, #(_shadow_OAM + 8)
                                   1117 ;x:\gbdk\include\gb\gb.h:1878: itm->y=y, itm->x=x;
      000588 79               [ 4] 1118 	ld	a, c
      000589 22               [ 8] 1119 	ld	(hl+), a
      00058A 70               [ 8] 1120 	ld	(hl), b
                                   1121 ;src/main.c:227: UPDATE_KEYS();
      00058B FAr01r00         [16] 1122 	ld	a, (#_keys)
      00058E EAr00r00         [16] 1123 	ld	(#_previous_keys),a
      000591 CDr00r00         [24] 1124 	call	_joypad
      000594 EAr01r00         [16] 1125 	ld	(#_keys),a
                                   1126 ;src/main.c:229: vsync();
      000597 CDr00r00         [24] 1127 	call	_vsync
                                   1128 ;src/main.c:231: }
      00059A 18 C8            [12] 1129 	jr	00102$
                                   1130 	.area _CODE
                                   1131 	.area _INITIALIZER
      000000                       1132 __xinit__previous_keys:
      000000 00                    1133 	.db #0x00	; 0
      000001                       1134 __xinit__keys:
      000001 00                    1135 	.db #0x00	; 0
                                   1136 	.area _CABS (ABS)
